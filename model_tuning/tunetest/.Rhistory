install.packages("memoise")
library(tunetest)
library(tunetest)
setwd("~/OneDrive/Masters/Publication/model.comparisons_limb/")
load("Jul..15:30:56_chrom.models.Rdata")
load("Jul..15:30:56_seq.models.Rdata")
load("160623_ML_data_summary_train.Rdata")
load("160622_clustp_scores_train.Rdata")
load("160216_velements.Rdata")
rename<-function(x) sapply( strsplit(x, split="_chr"), '[[', 1 )
# getting rid of the coordinates...
row.names(clustp_scores.train)<-rename(row.names(clustp_scores.train))
velements<-velements[ match(row.names(ML_data_summary.train), names(velements)) ]
clustp_scores.train<-clustp_scores.train[ match(row.names(ML_data_summary.train), row.names(clustp_scores.train)), ]
require(tunetest)
require(data.table)
require(foreach)
require(doMC)
require(reshape2)
require(stringr)
require(rtracklayer)
require(GenomicRanges)
require(GenomicAlignments)
require(e1071)
require(randomForest)
require(glmnet)
require(caret)
require(PRROC)
require(ROCR)
require(plyr)
require(doMC)
extr.perf<-function(perflist, type="roc"){
if(type=="roc") return( lapply( perflist, function(z) {sapply( z, function(y){ sapply( y, function(x){x$roc.curve$auc}) })}) )
if(type=="pr") return( lapply( perflist, function(z) {sapply( z, function(y){ sapply( y, function(x){x$pr.curve$auc.integral}) })}))
}
# predicting the models on their 'leave one out' test sets:
predictions.chromatin<-lapply( tunedmodels.chrom, function(model){ lapply(model, function(feature){lapply(feature, function(fold){predict(fold, type="dec.values")} )} )} )
predictions.seq<-lapply( tunedmodels.seq, function(model){ lapply(model, function(feature){lapply(feature, function(fold){predict(fold, type="dec.values")} )} )} )
require(tunetest)
predictions.chromatin<-lapply( tunedmodels.chrom, function(model){ lapply(model, function(feature){lapply(feature, function(fold){predict(fold, type="dec.values")} )} )} )
library(tunetest)
predictions.chromatin<-lapply( tunedmodels.chrom, function(model){ lapply(model, function(feature){lapply(feature, function(fold){predict(fold, type="dec.values")} )} )} )
library(tunetest)
library(tunetest)
