{
    "collab_server" : "",
    "contents" : "setwd(\"~/OneDrive/Masters/projects/with_iros/ALL_TFS_REGIONS/\")\n\n# what I did to produce the all TFs all Regions normalized scores:\n\nlibrary(data.table)\nrequire(GenomicRanges)\nrequire(GenomicAlignments)\nrequire(rtracklayer)\nrequire(stringr)\nrequire(BiocParallel)\nrequire(GenomeInfoDb)\nrequire(BSgenome.Mmusculus.UCSC.mm10)\nrequire(plyr)\nrequire(reshape2)\nload(\"processed_ALL_REGIONS_TFS.Rdata\")\nfiles<-c(\"res_cons.5_best_e4.Rdata\", \"res_cons.5_sum_e4.Rdata\",\"res_cons.5_counts_e4.Rdata\", \"res_nocons_best_e4.Rdata\", \"res_nocons_sum_e4.Rdata\", \"res_nocons_counts_e4.Rdata\")\nfor ( i in files ) load(i)\nrm(i, files)\n# getting everything ordered\nres<-list(res_cons_best, res_cons_sum, res_cons.5_counts_e4.Rdata, res_no.cons_best, res_no.cons_sum, res_no.cons_counts_e4.Rdata)\nres<-lapply(res,'[[',1)\nrm(res_cons_best, res_cons_sum, res_no.cons_best, res_no.cons_sum, res_cons.5_counts_e4.Rdata, res_no.cons_counts_e4.Rdata)\nnames(res)<-c(\"cons.best\",\"cons.sum\",\"cons.counts\",\"best\",\"sum\",\"counts\")\nget.reg<-function(x){\nseqnames<-str_extract(x, \"chr[0-9]{0,2}[XY]{0,1}\" )\nranges<-do.call(\"rbind\", lapply( str_split( str_extract(x, \"[0-9]+-[0-9]+\"), \"-\"), as.numeric))\nreturn(GRanges(seqnames = seqnames, ranges = IRanges(start = ranges[,1], end=ranges[,2])))\n}\nregs<-lapply( res, function(x){get.reg(row.names(x))} )\ntmp<-lapply(regs, width)\nres_summary<-lapply(1:length(res), function(x){\n#sapply(res[[x]][[1]], function(y){c(\"sd\"=sd(y), \"mean\"=mean(y), \"median\"=median(y), max=max(y), \"non.zero\"=sum(y>0)/length(y), \"cor.length\"=cor(y, tmp[[x]]) )})\nsapply(res[[x]], function(y){c(\"sd\"=sd(y), \"mean\"=mean(y), \"median\"=median(y), max=max(y), \"non.zero\"=sum(y>0)/length(y), \"cor.length\"=cor(y, tmp[[x]]) )})\n})\nnames(res_summary)<-names(res)\npdf(\"summary_statistics.pdf\",width=10,height=10)\npar(mfrow=c(2,3))\nfor ( i in 1:6 ) plot( x=res_summary[[i]][\"non.zero\",], y=res_summary[[i]][\"cor.length\",], main=names(res_summary)[i], xlab = \"non zero\", ylab=\"cor.length\", xlim=c(0,1), ylim=c(0,1) )\nfor ( i in 1:6 ) plot( res_summary[[i]][\"mean\",], res_summary[[i]][\"cor.length\",], main=names(res_summary)[i], xlab = \"mean\", ylab=\"cor.length\")\nfor ( i in 1:6 ) plot( res_summary[[i]][\"mean\",], res_summary[[i]][\"sd\",], main=names(res_summary)[i], xlab = \"mean\", ylab=\"sd\" )\nfor ( i in 1:6 ) plot( res_summary[[i]][\"median\",], res_summary[[i]][\"sd\",], main=names(res_summary)[i], xlab = \"median\", ylab=\"sd\" )\nfor ( i in 1:6 ) plot( res_summary[[i]][\"non.zero\",], res_summary[[i]][\"mean\",], main=names(res_summary)[i], xlab = \"non.zero\", ylab=\"mean\" )\ndev.off()\nfor ( i in 1:length(res_summary) ) write.csv(res_summary[[i]], file=paste(\"binding_sites_summary_\",names(res_summary)[i],\".csv\", sep = \"\"))\nres_summary<-lapply(res_summary, function(x){data.frame(t(x))})\nmotifdata<-read.csv(\"../motif_metadata.anno.csv\", stringsAsFactors=FALSE)\nres_summary_subfams<-list()\nres_summary_subfams.means<-list()\nres_summary_subfams.sds<-list()\nmouseTF<-gsub(motifdata$mouseTF, pattern = '-', replacement = '.')\nfor ( i in 1:length(res_summary) ){\ntfs<-row.names(res_summary[[i]])\nfams<-motifdata$Family\nfams[is.na(fams)]<-mouseTF[is.na(fams)]\nfams<-fams[ match(tfs, mouseTF) ]\nres_summary_subfams.means[[i]]<-data.table(res_summary[[i]], family=fams)[,lapply(.SD, mean),by=family]\nres_summary_subfams.sds[[i]]<-data.table(res_summary[[i]], family=fams)[,lapply(.SD, sd),by=family]\nsetnames(res_summary_subfams.means[[i]], paste0(colnames(res_summary_subfams.means[[i]]),\".mean\"))\nsetnames(res_summary_subfams.sds[[i]], paste0(colnames(res_summary_subfams.sds[[i]]),\".sd\"))\nres_summary_subfams[[i]]<-cbind(res_summary_subfams.means[[i]], res_summary_subfams.sds[[i]])\nres_summary_subfams[[i]]$members<-data.table(res_summary[[i]], family=fams)[,length(sd) ,by=family]$V1\n}\nfor ( i in 1:length(res_summary_subfams) ) write.csv(res_summary_subfams[[i]], file=paste(\"binding_sites_summary_fams_\",names(res_summary)[i],\".csv\", sep = \"\"))\n############################ normalization by element width and scaling\nres_proc<-res\nexcl<-c(1,4)\nres_proc<-res[-excl]\nwid<-tmp[-excl]\nregs_proc<-list()\nfor ( i in 1:length(res_proc)){\nres_proc[[i]]<-res_proc[[i]][ wid[[i]] <= 10000, ]\nwid[[i]]<-wid[[i]][ wid[[i]] <=10000 ]\nregs_proc[[i]]<-get.reg(row.names(res_proc[[i]]))\n}\nfor( i in 1:length(regs_proc)) print(all(width(regs_proc[[i]])==wid[[i]]))\nscores.total<-sapply(res_proc, function(x){apply(x, 2 , sum)})\nlengths.total<-sapply(wid, sum)\nscores.by.bp<-scores.total %*% diag(1/lengths.total)\nfor ( i in 1:length(res_proc)){\nexp.scores<-matrix(rep(wid[[i]],nrow(scores.by.bp)),nrow=length(wid[[i]]))\nexp.scores<-exp.scores %*% diag(scores.by.bp[,i])\nres_proc[[i]]<-res_proc[[i]]-exp.scores\n}\ndim(res_proc[[1]])\ndim(res_proc[[2]])\ndim(res_proc[[3]])\ndim(res_proc[[4]])\nplot(res_proc[[3]]$Hoxd13, wid[[3]])\nabline(v = 0, lty=2)hist(res_proc[[3]]$Hoxd13, 100)\ngrp<-lapply(wid, function(x){ceiling(x/1001)})\nnorm.scores<-list()\ntable(grp[[3]])\nexpr<-lapply(res_proc, function(z){ paste(paste(c('list( \"rn\" = rn ',sapply(colnames(z),function(x){paste0('\"',x,'\"=',x,'/sd(',x,')')})),collapse=','),')') })\nfor ( i in 1:length(res_proc)){\nnorm.scores[[i]]<-data.table(res_proc[[i]], group=grp[[i]], rn = row.names(res_proc[[i]]) )\nnorm.scores[[i]]<-norm.scores[[i]][,eval(parse(text=expr[[i]])), by=group ]\n}\nfor ( i in 1:length(res_proc) ) print(all(colnames(norm.scores[[i]])[-(1:2)]==colnames(res_proc[[i]])))\nfor ( i in 1:length(norm.scores) ) print( norm.scores[[i]][,lapply(.SD,sd),by=group, .SDcols=colnames(res_proc[[i]])] )\nnorm.scores<-lapply(norm.scores, function(x){ dat<-data.frame(x)[,-(1:2)]; row.names(dat)<-x$rn; return(dat)} )\nwid<-lapply(norm.scores, function(x){width(get.reg(row.names(x)))})\nranges<-lapply(norm.scores, function(x){get.reg(row.names(x))})\nplot(norm.scores[[3]]$Hoxd13, wid[[3]])\ntable(grp[[3]])\nhist(norm.scores[[3]]$Hoxd13, 100)\nhist(norm.scores[[3]]$Hoxa10, 100)\nmeds<-lapply(norm.scores, function(x){median(unlist(x))})\nquants<-lapply(1:length(norm.scores), function(x){quantile(x = unlist(norm.scores[[x]]), probs = seq(0,1,by = 0.1) )})\ndiscr.scores<-list()\nfor ( i in 1:length(norm.scores) ){\ndiscr.scores[[i]]<-do.call(data.frame, lapply(norm.scores[[i]], function(x){ cut( x,breaks = quants[[i]], labels = 1:10, ordered_result = TRUE) }))\n}\n# calculating feature entropies:\nentrop<-sapply(discr.scores, function(x){\napply(x,2, function(y){\np<-table(y) / length(y)\nreturn( -sum( p*log2(p) ) )\n})\n})\nhist(entrop[,3])\nsave(entrop, file=\"TF_entropies.Rdata\")\ntmp<-res_summary[-excl]\nfor ( i in 1:length(tmp) ){\ntmp[[i]]<-cbind(tmp[[i]], \"Entropy\"=entrop[,i])\n}\nres_summary.norm<-lapply(1:length(norm.scores), function(x){\nsapply(norm.scores[[x]], function(y){c(\"sd\"=sd(y), \"mean\"=mean(y), \"median\"=median(y), max=max(y), min=min(y), \"cor.length\"=cor(y, wid[[x]]) )})\n})\nfor(i in 1:length(res_summary.norm) ){\nrow.names(res_summary.norm[[i]])<-paste0(row.names(res_summary.norm[[i]]), \".after_norm\")\n}\nfor ( i in 1:length(tmp) ){\ntmp[[i]]<-rbind(data.frame(t(tmp[[i]])), data.frame(res_summary.norm[[i]]))\n}\nwrite.csv(tmp[[1]], file=\"binding_sites_summary_cons.sum_entropy_finalrun.csv\")\nwrite.csv(tmp[[2]], file=\"binding_sites_summary_cons.counts_entropy_finalrun.csv\")\nwrite.csv(tmp[[3]], file=\"binding_sites_summary_nocons.sum_finalrun_entropy.csv\")\nwrite.csv(tmp[[4]], file=\"binding_sites_summary_nocons.counts_finalrun_entropy.csv\")\nsave(norm.scores, file=\"norm_scores_final.Rdata\")\nexpr<-list()\n# for summing up by subfamily/family/...\nfor ( i in 1:length(norm.scores) ){\nexpr[[i]]<-list()\ntfs<-colnames(norm.scores[[i]])\nmouseTF<-gsub(motifdata$mouseTF, pattern = '-', replacement = '.')\nfams<-motifdata$Subfamily\nfams[is.na(fams)]<-mouseTF[is.na(fams)]\nfams<-fams[ match(tfs, mouseTF) ]\nfams<-gsub(pattern = '-|\\\\(|\\\\)|\\\\/',replacement=\".\",fams)\n# lol complicated as fuck:\nexpr[[i]]<-paste('list(',paste(unlist(lapply(unique(fams), function(i){ paste(i,'= mean(c(',paste(tfs[ fams == i], collapse=','),\"))\") })),collapse=\",\"),',rn=rn)')\n}\nfor ( i in 1:length(norm.scores) ){\nnorm.scores[[i]] <- data.frame(data.table( norm.scores[[i]], keep.rownames = TRUE )[,eval(parse(text=expr[[i]])),by=rn])\nrow.names(norm.scores[[i]])<-norm.scores[[i]]$rn.1\nnorm.scores[[i]]$rn<-NULL\nnorm.scores[[i]]$rn.1<-NULL\n}\nhead(norm.scores[[3]])\nsave(norm.scores, file=\"norm.scores_subfams.Rdata\")\n\n",
    "created" : 1468016853884.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3939915565",
    "id" : "3FC1FE66",
    "lastKnownWriteTime" : 1467759737,
    "last_content_update" : 1467759737,
    "path" : "~/OneDrive/Masters/projects/with_iros/ALL_TFS_REGIONS/160605_score_calc_normalizaton_etc.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}